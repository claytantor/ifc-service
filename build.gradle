group 'com.ifc.crowdcompass'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
        classpath "net.saliman:gradle-cobertura-plugin:2.4.0"
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'net.saliman.cobertura'


sourceCompatibility = 1.7
targetCompatibility = 1.7


mainClassName = "com.crowcompass.takehome.InternationalFixedCalendarApp"

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'

    compile 'org.apache.cxf:cxf-rt-frontend-jaxrs:3.1.0'


    compile 'javax.inject:javax.inject:1'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.6.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.3'
    compile 'cglib:cglib-nodep:2.2.2'
    compile 'org.springframework:spring-core:3.2.15.RELEASE'
    compile 'org.springframework:spring-context:3.2.15.RELEASE'
    compile 'org.springframework:spring-web:3.2.15.RELEASE'

    compile 'org.eclipse.jetty:jetty-server:8.1.18.v20150929'
    compile 'org.eclipse.jetty:jetty-webapp:8.1.18.v20150929'

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testRuntime "org.slf4j:slf4j-api:1.7.10"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}

jar {
    baseName = 'ifc-app'
    version = '0.0.1-SNAPSHOT'
    manifest {
        attributes("Implementation-Title": "Gradle", "Implementation-Version": version)
    }
}

shadowJar {
    baseName = 'ifc-app'
    version = '0.0.1-SNAPSHOT'
    mergeServiceFiles()
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) { resource = 'META-INF/cxf/bus-extensions.txt' }
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer) { resource = 'META-INF/cxf/cxf-extension-xml.xml' }
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer) { resource = 'META-INF/cxf/cxf-extension-http-jetty.xml' }
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer) { resource = 'META-INF/cxf/cxf-extension-http.xml' }
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer) { resource = 'META-INF/cxf/cxf-servlet.xml' }
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer) { resource = 'META-INF/cxf/cxf.xml' }

}

cobertura {
    coverageFormats = ['html', 'xml']
    coverageIgnoreTrivial = true
    coverageIgnores = ['org.slf4j.Logger.*']
    coverageReportDir = new File("$buildDir/reports/cobertura")
}

test.finalizedBy(project.tasks.cobertura)